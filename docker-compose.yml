version: "3.3"

services:
  db:
    image: postgres
    container_name: emotion-db
    restart: unless-stopped
    networks:
      - emotion
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
  api:
    image: emotion-api
    build: .
    depends_on:
      - db
    container_name: emotion-api
    restart: unless-stopped
    networks:
      - caddy
      - emotion
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: root
      DB_PASSWORD: password
      DB_NAME: db
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      caddy: api-emotion.etienne-faviere.tech
      caddy.reverse_proxy: "{{upstreams 8080}}"
  front:
    image: emotion-front
    networks:
      - caddy
    build: ../emotion-front
    container_name: emotion-front
    restart: unless-stopped
    labels:
      caddy: emotion.etienne-faviere.tech
      caddy.reverse_proxy: "{{upstreams 80}}"
  ai:
    image: emotion-ai
    build: ../emotion-ai
    container_name: emotion-ai
    networks:
      - caddy
    volumes:
      - ../emotion-ai/ai-models:/code/ai-models
    labels:
      caddy: ai-emotion.etienne-faviere.tech
      caddy.reverse_proxy: "{{upstreams 80}}"

networks:
  caddy:
    external: true
  emotion:
    external: false
